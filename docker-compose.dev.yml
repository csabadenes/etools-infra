version: '2.1'

services:
  proxy:
    build:
      context: ./proxy
      dockerfile: ./Dockerfile
    image: etoolsdev/etools-proxy:dev
    container_name: etoolsinfra_proxy
    ports:
      - "8082:80"
    depends_on:
      - backend
      - pmp
      - dashboard
      - travel
      - ap
    command: bash -c "./docker-entrypoint.sh && nginx -g 'daemon off;'${NX_CONFIG}"

  backend:
    environment:
      DEBUG_IP: ${DEBUG_IP:-"10.0.2.2"}
      DEBUG_PORT: ${DEBUG_PORT:-51312}
      DATABASE_URL: postgis://etoolusr:@db:5432/etools
      DJANGO_SETTINGS_MODULE: EquiTrack.settings.local
      PYCHARM_DEBUG: 1
    build:
      context: ./backend
      dockerfile: ./Dockerfile-dev
      args:
        REQUIREMENTS_FILE: local.txt
    image: etoolsdev/etools-backend:dev
    container_name: etoolsinfra_backend
    command: bash -c "sleep 10 && /code/wait-for-it.sh db:5432 && python /code/EquiTrack/manage${BACKEND_DEBUG}.py runserver 0.0.0.0:8080"
    volumes:
      - "./backend:/code"
    depends_on:
      - db

  db:
    build:
      context: ./db
      dockerfile: ./Dockerfile
    image: etoolsdev/etools-db:dev
    container_name: etoolsinfra_db
    ports:
      - "${DB_PORT:-51322}:5432"
#    volumes:
#      - './postgres_data:/var/lib/postgresql/data'

  warehouse:
    build:
      context: ./warehouse
      dockerfile: ./Dockerfile
    image: etoolsdev/etools-warehouse:dev
    container_name: etoolsinfra_warehouse

  redis:
    image: redis:4.0-alpine
    container_name: etoolsinfra_redis

  redash:
    image: redash/redash:latest
    depends_on:
      - warehouse
      - redis
    command: server
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: "INFO"
      REDASH_REDIS_URL: "redis://redis:6379/0"
      REDASH_DATABASE_URL: "postgresql://postgres@warehouse/redash"
    container_name: etoolsinfra_redash
    ports:
      - "5000:5000"

  superset:
    image: amancevice/superset
    depends_on:
      - warehouse
      - redis
    container_name: etoolsinfra_superset
    environment:
      MAPBOX_API_KEY: ${MAPBOX_API_KEY}
    ports:
      - "5002:8088"
    volumes:
      - ./superset:/etc/superset

  redash-worker:
    command: scheduler
    volumes_from:
      - redash
    depends_on:
      - redash
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: "INFO"
      REDASH_REDIS_URL: "redis://redis:6379/0"
      REDASH_DATABASE_URL: "postgresql://postgres@warehouse/redash"
      QUEUES: "queries,scheduled_queries,celery"
      WORKERS_COUNT: 2
    image: redash/redash:latest
    container_name: etoolsinfra_redash_worker

  airflow:
    image: puckel/docker-airflow:1.8.2
    depends_on:
      - redis
      - warehouse
    command: webserver
    container_name: etoolsinfra_airflow
    environment:
      LOAD_EX: "n"
      EXECUTOR: "Celery"
      FERNET_KEY: "811bm0j8RpZv6qE2gPDy8rw5y7S8oH1O0NqBMuQ_WkM="
      POSTGRES_HOST: warehouse
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: ""
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      - ./airflow/sql:/usr/local/airflow/sql
    ports:
      - "5001:8080"

  flower:
    image: puckel/docker-airflow:1.8.2
    depends_on:
      - redis
    container_name: etoolsinfra_flower
    command: flower
    environment:
      EXECUTOR: "Celery"
    ports:
      - "5555:5555"

  airflow-scheduler:
    image: puckel/docker-airflow:1.8.2
    depends_on:
      - airflow
    container_name: etoolsinfra_airflow_scheduler
    command: scheduler
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      - ./airflow/sql:/usr/local/airflow/sql
    environment:
      LOAD_EX: "n"
      FERNET_KEY: "811bm0j8RpZv6qE2gPDy8rw5y7S8oH1O0NqBMuQ_WkM="
      EXECUTOR: "Celery"
      POSTGRES_HOST: warehouse
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: ""

  airflow-worker:
    image: puckel/docker-airflow:1.8.2
    depends_on:
      - airflow-scheduler
    container_name: etoolsinfra_airflow_worker
    command: worker
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      - ./airflow/sql:/usr/local/airflow/sql
    environment:
      FERNET_KEY: "811bm0j8RpZv6qE2gPDy8rw5y7S8oH1O0NqBMuQ_WkM="
      EXECUTOR: "Celery"
      POSTGRES_HOST: warehouse
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: ""

  pmp:
    build:
      context: ./pmp
      dockerfile: ./Dockerfile-dev
    image: etoolsdev/etools-pmp:dev
    container_name: etoolsinfra_pmp
    volumes:
      - "./pmp:/code"
    command: ${FE_COMMAND:-sh -c "polymer serve -H 0.0.0.0 -p 8080"}
#
  dashboard:
    build:
      context: ./dashboard
      dockerfile: ./Dockerfile-dev
    image: etoolsdev/etools-dashboard:dev
    container_name: etoolsinfra_dashboard
    volumes:
      - "./dashboard:/code"
    command: ${FE_COMMAND:-sh -c "polymer serve -H 0.0.0.0 -p 8080"}
#
  travel:
    build:
      context: ./travel
      dockerfile: ./Dockerfile-dev
    image: etoolsdev/etools-travel:dev
    container_name: etoolsinfra_travel
    volumes:
      - "./travel:/code"
    command: ${FE_COMMAND:-sh -c "polymer serve -H 0.0.0.0 -p 8080"}

  ap:
    build:
      context: ./ap
      dockerfile: ./Dockerfile-dev
    image: etoolsdev/etools-ap:dev
    container_name: etoolsinfra_ap
    volumes:
      - "./ap:/code"
      - "/code/build"
